version: "3.8"

services:
  backend:
    build:
      context: ./url_shortener_backend
    container_name: url_shortener_backend
    ports:
      - "3000:3000"
    volumes:
      - ./url_shortener_backend:/app
      - /app/node_modules
    working_dir: /app
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://mongo:27017/url_shortener
      SEED_DB: false
      REDIS_HOST: redis
      REDIS_PORT: 6379
      API_V1_RATE_LIMIT_MAX_REQUESTS: 2       # Maximum requests allowed
      API_V1_RATE_LIMIT_WINDOW_MINUTES: 5     # Time window in minutes
      API_V2_RATE_LIMIT_MAX_REQUESTS: 200     # Maximum requests allowed
      API_V2_RATE_LIMIT_WINDOW_MINUTES: 10    # Time window in minutes
    depends_on:
      - mongo
      - redis
    command: /bin/bash -c "npm install && npm start"
    networks:
      - app-network

  website:
    build:
      context: ./url_shortener_website
      dockerfile: Dockerfile
    container_name: url_shortener_website
    ports:
      - "8080:80"
    volumes:
      - ./url_shortener_website:/app
    environment:
      - NODE_ENV=development
    networks:
      - app-network
      
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:27017/status"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - app-network
      
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    
volumes:
  mongo_data:
    driver: local
